<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: objectc | CallMe枪哥]]></title>
  <link href="http://whatshit.me/blog/categories/objectc/atom.xml" rel="self"/>
  <link href="http://whatshit.me/"/>
  <updated>2014-08-07T18:46:50+08:00</updated>
  <id>http://whatshit.me/</id>
  <author>
    <name><![CDATA[Suning]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[类变量]]></title>
    <link href="http://whatshit.me/blog/2014/03/11/lei-bian-liang/"/>
    <updated>2014-03-11T23:58:17+08:00</updated>
    <id>http://whatshit.me/blog/2014/03/11/lei-bian-liang</id>
    <content type="html"><![CDATA[<p>objc中不能在类声明中的声明static 变量, 会报:
Error: Type name does not allow storage class to be specified
这是objc不准许的。如果要做类变量，需要在m文件中声明static 变量, 位置在
@implementation里外都可以。</p>

<p>ClassMem.m:
{% highlight objc %}
static NSUInteger mInt;
@implementation ClassMem
&hellip;
@end</p>

<p>{% endhighlight %}</p>

<p>不在h文件中声明(@interface之外)的原因和c一样(objc也是c嘛), 任何包含此
头文件的m文件都会创建一份static变量，同名且互相独立，作用域不相同。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objc消息调用性能测试]]></title>
    <link href="http://whatshit.me/blog/2014/03/11/xiao-xi-diao-yong-ce-shi/"/>
    <updated>2014-03-11T20:03:37+08:00</updated>
    <id>http://whatshit.me/blog/2014/03/11/xiao-xi-diao-yong-ce-shi</id>
    <content type="html"><![CDATA[<p>测试了一下objc的消息调用性能，测试环境是2.3Gi7 16GDDR3</p>

<p>代码如下:</p>

<p>{% highlight objc %}</p>

<pre><code>Greeter * ag = [[Greeter alloc] init];
clock_t start,end;
start = clock();
for (int i = 0; i &lt; 1000000; i++) {
    [ag testUid];
}
end = clock();
unsigned long k = (end-start);
NSLog(@"first spend: %lu",k);

void (*simp)(id,SEL);

simp = (void(*)(id,SEL))[ag methodForSelector:@selector(testUid)];
start = clock();

for (int i = 0; i &lt; 1000000; i++) {
    simp(ag, @selector(testUid));
}
end = clock();


unsigned long j = (end - start);
NSLog(@"second spend: %lu",j);
NSLog(@"the per is %f%%",(float)(k-j)*100/k);
</code></pre>

<p>{% endhighlight %}</p>

<p>测试结果:</p>

<p>{% highlight robotframework %}
2014-03-11 20:06:53.566 HelloWorld[9334:303] first spend: 3537
2014-03-11 20:06:53.569 HelloWorld[9334:303] second spend: 2081
2014-03-11 20:06:53.569 HelloWorld[9334:303] the per is 41.164829%
{% endhighlight %}</p>

<p>100万次的空消息调用，直接的函数调用比通过消息方式节约了大约33-42%
如果有密集型的循环调用，这里是可以优化一部分性能，但带来的负面是代码不易读。</p>
]]></content>
  </entry>
  
</feed>
